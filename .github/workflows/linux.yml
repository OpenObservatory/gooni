# Build and test Linux binary
name: linux
on:
  push:
  schedule:
    - cron: "14 17 * * 3"
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: Docker
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      - uses: actions/setup-go@v1
        with:
          go-version: "1.14"
      - uses: actions/checkout@v2
      - run: DOCKER_CLI_EXPERIMENTAL=enabled ./build.sh linux
      - run: ./smoketest.sh ./CLI/linux/amd64/ooniprobe
      - uses: actions/upload-artifact@v1
        with:
          name: ooniprobe-linux-amd64
          path: ./CLI/linux/amd64/ooniprobe

  aarch64_build:
    runs-on: "ubuntu-latest"
    name: Build on aarch64 Buster
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Build ooniprobe
        id: runcmd
        with:
          arch: aarch64
          distro: buster
          # distro: ubuntu20.04 # no linux-headers-arm64

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          run: |
            uname -a
            apt-get -qq update
            apt-get install -qq -y --no-install-recommends gcc git linux-headers-armmp wget musl-dev ca-certificates libc6-dev
            wget --no-verbose https://golang.org/dl/go1.16rc1.linux-armv6l.tar.gz
            tar xfz go1.16rc1.linux-armv6l.tar.gz
            export PATH=$PATH:$(pwd)/go/bin
            go version
            go env
            go build -tags netgo -ldflags='-s -w -extldflags -static' ./cmd/ooniprobe

      - name: Locate executable
        run: find . -name ooniprobe -type f -executable

      - name: Upload executable
        uses: actions/upload-artifact@v1
        with:
          name: ooniprobe-linux-aarch64
          path: ooniprobe

      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Build Debian package
        with:
          arch: armv7
          distro: buster
          githubToken: ${{ github.token }}
          run: |
            apt-get -qq update
            #apt-get build-dep -y --no-install-recommends .
            apt-get install -q  -y --no-install-recommends dpkg-dev build-essential devscripts debhelper
            VER=$(./ooniprobe version)
            if [[ ! $GITHUB_REF =~ ^refs/tags/* ]]; then
              VER="${VER}~${GITHUB_RUN_NUMBER}"
              dch -v $VER "New test version"
              BT_REPO="${BT_REPO}-test"
            else
              dch -v $VER "New release"
            fi
            dpkg-buildpackage -us -uc -b
            find ../ -name "*.deb" -type f
            DEB="../ooniprobe-cli_${VER}_aarch64.deb"
            BT_FNAME="ooniprobe-cli_${VER}_aarch64.deb"
            curl --upload-file "${DEB}" -u "${BT_APIUSER}:${BT_APIKEY}" \
              "https://api.bintray.com/content/${BT_ORG}/${BT_REPO}/${BT_PKGNAME}/${VER}/${BT_FNAME};deb_distribution=${DEBDIST};deb_component=main;deb_architecture=armhf;publish=1"
          env:
            DEBDIST: unstable
            BT_APIKEY: ${{ secrets.BT_APIKEY }}
            BT_APIUSER: federicoceratto
            BT_ORG: ooni
            BT_PKGNAME: ooniprobe
            BT_REPO: ooniprobe-debian
