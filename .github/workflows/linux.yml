# linux builds ooniprobe for Linux
name: linux
on:
  push:
    branches:
      - "release/**"

jobs:
  build_amd64:
    runs-on: "ubuntu-20.04"
    steps:
      - run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      - uses: actions/checkout@v2
      - run: ./mk OONI_PSIPHON_TAGS="" ./CLI/linux/amd64/ooniprobe
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
      - run: ./smoketest.sh ./CLI/linux/amd64/ooniprobe
      - run: ./mk OONI_PSIPHON_TAGS="" DEBIAN_TILDE_VERSION=$GITHUB_RUN_NUMBER ./debian/amd64
      - run: sudo apt-get install -y --no-install-recommends git python3 python3-requests python3-gnupg s3cmd
      - run: |
          for deb in *.deb; do
            ./.github/workflows/debops-ci --arch amd64 --show-commands upload --bucket-name ooni-deb $deb
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEB_GPG_KEY: ${{ secrets.DEB_GPG_KEY }}

  build_arm64:
    runs-on: "ubuntu-20.04"
    steps:
      - run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      - uses: actions/checkout@v2
      - run: sudo apt-get update -q
      - run: sudo apt-get install -y qemu-user-static
      - run: ./mk OONI_PSIPHON_TAGS="" ./CLI/linux/arm64/ooniprobe
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
      - run: ./smoketest.sh ./CLI/linux/arm64/ooniprobe
      - run: ./mk OONI_PSIPHON_TAGS="" DEBIAN_TILDE_VERSION=$GITHUB_RUN_NUMBER ./debian/arm64
      - run: sudo apt-get install -y --no-install-recommends git python3 python3-requests python3-gnupg s3cmd
      - run: |
          for deb in *.deb; do
            ./.github/workflows/debops-ci --arch arm64 --show-commands upload --bucket-name ooni-deb $deb
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEB_GPG_KEY: ${{ secrets.DEB_GPG_KEY }}
