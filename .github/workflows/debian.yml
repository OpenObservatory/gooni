# Build and publish Debian packages
name: debian
on:
  push:
    branches:
      - "*"
    tags:
      - "*"
jobs:
  build:
    runs-on: "ubuntu-20.04"
    steps:
      - name: Docker
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      - uses: actions/setup-go@v1
        with:
          go-version: "1.14"
      - uses: actions/checkout@v2
      - run: DOCKER_CLI_EXPERIMENTAL=enabled ./build.sh linux_amd64
      - run: find . -name ooniprobe -type f -executable
      - run: sudo apt-get update -q
      - run: sudo apt-get build-dep -y --no-install-recommends .
      - run: |
          VER=$(./CLI/linux/amd64/ooniprobe version)
          if [[ "$GITHUB_REF" != "refs/head/master" ]]; then
            DVER="${VER}~${GITHUB_RUN_NUMBER}"
            dch -v $DVER "test version"
            BT_REPO="${BT_REPO}-test"
          else
            dch -v $VER "New release"
          fi
          dpkg-buildpackage -us -uc -b
          find ../ -name "*.deb" -type f
          DEB="../ooniprobe-cli_${DVER}_amd64.deb"
          BT_FNAME="ooniprobe-cli_${DVER}_amd64.deb"
          echo curl --upload-file "${DEB}" -u "${BT_APIUSER}:${BT_APIKEY}" \
            "https://api.bintray.com/content/${BT_ORG}/${BT_REPO}/${BT_PKGNAME}/${DVER}/${BT_FNAME};deb_distribution=${DEBDIST};deb_component=main;deb_architecture=amd64;publish=1"
        env:
          DEBDIST: unstable
          BT_APIKEY: ${{ secrets.BT_APIKEY }}
          BT_APIUSER: federicoceratto
          BT_ORG: ooni
          BT_PKGNAME: ooniprobe
          BT_REPO: ooniprobe-debian
