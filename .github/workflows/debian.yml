# Build and publish Debian packages
name: debian
on:
  push:
    branches:
      - "master"
      - "release/**"
    tags:
      - "v*"
jobs:
  build:
    runs-on: "ubuntu-20.04"
    steps:
      - name: Docker
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      - uses: actions/setup-go@v1
        with:
          go-version: "1.16"
      - uses: actions/checkout@v2
      - run: DOCKER_CLI_EXPERIMENTAL=enabled ./build.sh linux_amd64
      - run: sudo apt-get update -q
      - run: sudo apt-get build-dep -y --no-install-recommends .
      - name: Install deps
        run: apt-get install -y --no-install-recommends git python3 python3-requests python3-gnupg s3cmd
      - name: Sign and upload
        run: |
          VER=$(./CLI/linux/amd64/ooniprobe version)
          if [[ ! $GITHUB_REF =~ ^refs/tags/* ]]; then
            VER="${VER}~${GITHUB_RUN_NUMBER}"
            dch -v $VER "New test version"
            BT_REPO="${BT_REPO}-test"
          else
            dch -v $VER "New release"
          fi
          dpkg-buildpackage -us -uc -b
          find ../ -name "*.deb" -type f
          DEB="../ooniprobe-cli_${VER}_amd64.deb"
          echo no | sudo dpkg -i $DEB
          export DEBFNAME="ooniprobe-cli_${VER}_amd64.deb"
          cd $GITHUB_WORKSPACE
          # AWS user debci-s3
          ./.github/workflows/debops-ci --show-commands upload --bucket-name ooni-debpkg-test $DEB
        env:
          DEB_GPG_KEY: ${{ secrets.DEB_GPG_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BT_REPO: ooniprobe-debian
